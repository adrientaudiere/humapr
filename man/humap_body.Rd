% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/humap_body.R
\name{humap_body}
\alias{humap_body}
\title{Create a humap body plot}
\usage{
humap_body(data, loc, side = NULL, type = "simple", proj = "neutral",
  body_halves = "separate", annotate = "freq", bridge = NULL,
  combine = NULL, na_rm = FALSE, controls = NULL)
}
\arguments{
\item{data}{tidy data frame, like the type you'd feed into ggplot() when
producing a histogram}

\item{loc}{character string indicating the name of the data frame column
containing localisation codes for observations.}

\item{side}{either character string or list. If \emph{string}, the argument
should be the data frame column indicating left and right side of
observations, and column values must be "left" or "right". If \emph{list},
the \code{var} element must denote the name of the data frame column
holding the data, and two \code{left} and \code{right} elements should be
character vectors denoting what values in the data frame column correspond
to those sides. Thus, for a data frame with the relevant column called
'lr_col', valid specifications would include \code{"lr_col"} and
\code{list(var = "lr_col", left = c("left", "l"), right = c("right",
"r"))}.}

\item{type}{currently, only \code{"simple"} is available, but we're working
on more natural-looking and gender-specific maps as well.}

\item{proj}{\code{"front"} or \code{"back"}. Ignored if \code{type =
"simple"}, so currently not in use.}

\item{body_halves}{character string defining how to deal with body halves.
\code{"separate"} (default) discriminates the left half from the right;
\code{"join"} merges observations in, e.g., right and left side of the
chest.}

\item{annotate}{\code{"freq"} (defaults) shows only absolute and relative
frequencies, \code{"all"} includes region names, and \code{NA} omits labels
altogether. See Details for ways to fine-tune the apperance of annotations.}

\item{bridge}{named \emph{list} specifying the bridge from your data format
to the native format of \code{humap_body}, e.g., \code{list(head =
c("head", "face", "scalp"))}. See Details.}

\item{combine}{a \emph{list} of vectors naming the regions to be combined and
mapped as one, e.g., \code{list(arm = c("shoulder", "arm", "elbow",
"wrist"))}. See Details.}

\item{na_rm}{logical indicating whether to remove missing data. Default is
\code{FALSE}.}

\item{controls}{named \emph{list} of more specific parameters for fine-tuning
the appereance of the humap. Currently, these controls are available (more
will follow in the fuuture): \code{na_fill} should be a string or function
specifying the fill of zero-count regions (default: "black"),
\code{label_pad} a numeric defining the padding between labels, in percent
of map height (default: \code{3.5}), \code{mid_include} a logical defining
whether to include mid-line observations and split them equally between
left and right (default: \code{FALSE}), and \code{round_counts} a logical
indicating whether to round (up) half-counts in annotation labels when splitting
mid-line observations between left and right (default: \code{FALSE}).}
}
\value{
A ggplot object with suitable layout settings for the purpose of
  \code{hump_body}.
}
\description{
\code{humap_body} creates a choropleth body map, on which your data are
projected. \code{humapr} is an extension of ggplot2, so \code{humap_*}
objects are compatible with with standard \code{ggplot2} function, e.g.,
\code{theme()} and \code{facet_wrap()}.
}
\details{
If you don't supply a \code{body_halves} argument humapr will default to
\code{pool} mode.

The \code{annotate} argument may be a named \code{list} with any combination
of the following four elements. The \code{details} element should be a
character string, and may be any of the valid values of the simple argument
(\code{"freq"}, \code{"all"}, \code{NA}). The remaining three elements
\code{gp}, \code{gp_text} and \code{gp_lines} must be \code{gpar} objects
(see \code{?grid::gpar}). If only \code{gp} is specified, it is applied to
both annotation text and lines. \code{gp_text} and \code{gp_lines} are
applied to annotation text and lines individually.

The \code{bridge} argument allows you to use your own localisation values,
and bridge them to those of \code{humap_body}. The idea is simple: you supply
a named \code{list}, each element of which corresponds one region in the
\code{humap_body} map; the name of the element should be the name of the
region, and the element should be a character vector of values in your data
that correspond to that region. See vignette [add reference to vignette here]
for examples.

If you want to combine several regions and map them as one, supply a named
\emph{list} in \code{combine}, following this logic: the name of each element
will be printed as the annotation text (if you so desire), and the element
must be a character vector specifying the names of \code{humap_body} regions
to map as one. Underscores in the list element names will be converted to
wide spaces. Make sure to \emph{not} use a name for a merged region that is
already used for another region; e.g., this is not allowed, as \code{hand}
already the name of another region: \code{list(hand = c("shoulder", "arm",
"elbow", "wrist"))}. You may, however, use a name of a region inside the
group, so this would be allowed: \code{list(hand = c("wrist", "hand"))}.
}
